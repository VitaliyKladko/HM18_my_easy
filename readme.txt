БД:
https://s3-us-west-2.amazonaws.com/secure.notion-static.com/65b5f76e-65ca-4018-b41a-cfdd3765dcf3/movies.db

# Простая версия

### Шаг 1. Используйте репозиторий с архитектурой проекта
Скопируйте структуру из репозитория (https://github.com/skypro-008/flask-easy-blank).
Установите зависимости и убедитесь, что всё работает.
Теперь вы готовы писать проект!

### Шаг 2. Создайте представления
Используя Flask-RESTX, создайте три неймспейса и отдельные папки под них.  Так, чтобы вьюхи для каждого неймспейса
оказались в своей папке.
Пропишите соответствующие методы.
**Для фильмов:**
- [ ]  GET /movies — получить все фильмы.
- [ ]  GET /movies/3 — получить фильм по ID.
- [ ]  GET /movies?director_id=15 — получить все фильмы режиссера.
- [ ]  GET /movies?genre_id=3 — получить все фильмы жанра.
- [ ]  GET /movies?year=2007 — получить все фильмы за год.
- [ ]  POST /movies — создать фильм.
- [ ]  PUT /movies/1 — изменить информацию о фильме.
- [ ]  DELETE /movies — удалить фильм.
**Для режиссеров:**
- [ ]  GET /directors — получить всех режиссеров.
- [ ]  GET /directors/3 — получить режиссера по ID.
**Для жанров:**
- [ ]  GET /genres — получить все жанры.
- [ ]  GET /genres/3 — получить жанр по ID.
Создайте Class-Based Views и напишите методы, которые возвращали бы пустые строки. Запустите приложение и, используя
Postman, убедитесь, что всё работает.

### Шаг 3. Создайте модели

**Фильм** (Movie)
id
title
description
trailer
year
rating
genre_id (связь с Genre)
director_id (связь с Director)

**Жанр** (Genre)
id
name

**Режиссер** (Director)
id
name

### Шаг 4. Напишите схемы сериализации
Напишите схемы сериализации для Movie, Genre, Director и разместите их в models.py.

### Шаг 5. Допишите код вьюшек — жанры
Внутри соответствующего файла в папке views допишите представления:
- [ ]  GET /genres — получить все жанры.
- [ ]  GET /genres/3 — получить жанр по ID.

### Шаг 6. Допишите код вьюшек — режиссеры
Внутри соответствующего файла в папке views допишите представления:
- [ ]  GET /directors — получить всех режиссеров.
- [ ]  GET /directors/3 — получить режиссера по ID.

### Шаг 7. Допишите код вьюшек — фильмы
Внутри соответствующего файла в папке views допишите представления:
- [ ]  GET /movies — получить все фильмы.
- [ ]  GET /movies/3 — получить фильм по ID.
- [ ]  GET /movies?director_id=15 — получить все фильмы режиссера.
- [ ]  GET /movies?genre_id=3 — получить все фильмы жанра.
- [ ]  GET /movies?year=2007 — получить все фильмы за год.
- [ ]  POST /movies — создать фильм.
- [ ]  PUT /movies/1 — изменить информацию о фильме.
- [ ]  DELETE /movies — удалить фильм.

### Шаг 8. Убедитесь, что всё работает!
Надеемся, всё это время вы делали атомарные коммиты в ветку develop. Теперь, когда всё приложение готово, отправьте
pull request в главную ветку и сдайте задание на проверку.